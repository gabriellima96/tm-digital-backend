# docker-compose.yml
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: tm-digital-backend_dev
    ports:
      - "${APP_PORT_HOST:-3000}:${PORT:-3000}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - .env
    command: npm run start:dev
    networks:
      - tm-digital_network

  db:
    image: postgis/postgis:16-3.4
    container_name: tm-digital-db_dev
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT_HOST:-5432}:${DB_PORT_CONTAINER:-5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tm-digital_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  tm-digital_network:
    driver: bridge
